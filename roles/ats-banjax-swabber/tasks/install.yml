---

- name: Add Apache Traffic Server UNIX group
  group:
    name: "{{ ats_groupname }}"
    state: present

- name: Add Apache Traffic Server UNIX user
  user:
    name: "{{ ats_username }}"
    group: "{{ ats_groupname }}"
    shell: "/bin/false"
    comment: "Apache Traffic Server"
    createhome: no
    state: present

- name: Install development package required to build Apache Traffic Server
  apt:
    name: "{{item}}"
    state: present
  with_items:
    - build-essential
    - automake
    - autoconf
    - libtool
    - flex
    - bison

- name: Install Apache Traffic Server and Banjax header dependencies sources for building
  apt:
    name: "{{item}}"
    state: present
  with_items:
    - libssl-dev
    - libhwloc-dev
    - libcap-dev
    - tcl-dev
    - libpcre3-dev
    - libncurses5-dev
    - libcurl4-openssl-dev  
    - git-core
    - libyaml-cpp-dev
    - libyaml-cpp0.5v5
    - libre2-dev
    - libzmq3-dev
    - libboost-dev
    - libboost-system-dev
    - libboost-test-dev
    - libconfig++-dev
    - cmake

- name: Retrieve Apache Traffic Server source archive
  get_url:
    url: "http://apache.cp.if.ua/trafficserver/trafficserver-{{ ats_version }}.tar.bz2"
    checksum: "{{ ats_src_archive_checksum }}"
    dest: "/tmp/ats-src-{{ ats_version }}.tar.bz2"

- name: Create Apache Traffic Server build directory
  file:
    path: "/tmp/ats-src-{{ ats_version }}"
    state: directory   

- name: Unpack Apache Traffic Server source archive
  unarchive:
    remote_src: yes
    src: "/tmp/ats-src-{{ ats_version }}.tar.bz2"
    dest: "/tmp/ats-src-{{ ats_version }}"

- name: Configure Apache Traffic Server source
  command: "./configure --prefix={{ ats_install_path|quote }} --enable-layout=Apache --with-user={{ ats_username|quote }} --with-group={{ ats_groupname|quote }} --enable-experimental-plugins --with-ncurses --enable-wccp"
  args:
    chdir: "/tmp/ats-src-{{ ats_version }}/trafficserver-{{ ats_version }}/"

- name: Compile Apache Traffic Server
  command: make 
  args:
    chdir: "/tmp/ats-src-{{ ats_version }}/trafficserver-{{ ats_version }}/"

- name: Install Apache Traffic Server
  command: make install
  args:
    chdir: "/tmp/ats-src-{{ ats_version }}/trafficserver-{{ ats_version }}/"

- name: Create Banjax build directory
  file:
    path: "/tmp/banjax-src-{{ banjax_git_checkout }}"
    state: directory   

- name: Retrieve Banjax source code in required version
  git:
    repo: "{{ banjax_repository }}"
    dest: "/tmp/banjax-src-{{ banjax_git_checkout }}"
    version: "{{ banjax_git_checkout }}"

- name: Create build director in source repository
  file:
    path: "/tmp/banjax-src-{{ banjax_git_checkout }}/build"
    state: directory

- name: Run cmake in Banjax source directory
  command: "cmake ../ -DCMAKE_CXX_FLAGS=\"-I{{ ats_install_path|quote }}/include\""
  args:
    chdir: "/tmp/banjax-src-{{ banjax_git_checkout }}/build"
 
- name: Run make in Banjax source directory
  command: make
  args:
    chdir: "/tmp/banjax-src-{{ banjax_git_checkout }}/build"

- name: Copy Banjax plugin into the Apache Traffic Server modules directory
  copy:
    remote_src: true
    src: "/tmp/banjax-src-{{ banjax_git_checkout }}/build/banjax.so"
    dest: "{{ ats_install_path }}/modules/banjax-{{ banjax_git_checkout }}.so"
    owner: root
    group: root
    mode: "0755"

